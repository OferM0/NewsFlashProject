// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using server.Dal;

#nullable disable

namespace server.Dal.Migrations
{
    [DbContext(typeof(DataLayer))]
    partial class DataLayerModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CategoryUser", b =>
            {
                b.Property<int>("InterestsId")
                    .HasColumnType("int");

                b.Property<string>("UsersUserId")
                    .HasColumnType("nvarchar(450)");

                b.HasKey("InterestsId", "UsersUserId");

                b.HasIndex("UsersUserId");

                b.ToTable("CategoryUser");
            });

            modelBuilder.Entity("server.Model.Category", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<string>("Topic")
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.ToTable("Categories");
            });

            modelBuilder.Entity("server.Model.LogItem", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<DateTime>("LogTime")
                    .HasColumnType("datetime2");

                b.Property<string>("Message")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Type")
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.ToTable("Logs");
            });

            modelBuilder.Entity("server.Model.NewsItem", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<int>("CategoryId")
                    .HasColumnType("int");

                b.Property<int>("ClickCount")
                    .HasColumnType("int");

                b.Property<string>("Description")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("ImageUrl")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("ItemId")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Link")
                    .HasColumnType("nvarchar(max)");

                b.Property<DateTime>("PublishDate")
                    .HasColumnType("datetime2");

                b.Property<string>("Title")
                    .HasColumnType("nvarchar(max)");

                b.Property<int>("WebSiteId")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("CategoryId");

                b.HasIndex("WebSiteId");

                b.ToTable("NewsItems");
            });

            modelBuilder.Entity("server.Model.Rss", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<int>("CategoryId")
                    .HasColumnType("int");

                b.Property<string>("Url")
                    .HasColumnType("nvarchar(max)");

                b.Property<int>("WebSiteId")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("CategoryId");

                b.HasIndex("WebSiteId");

                b.ToTable("Rsses");
            });

            modelBuilder.Entity("server.Model.User", b =>
            {
                b.Property<string>("UserId")
                    .HasColumnType("nvarchar(450)");

                b.Property<string>("Email")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Name")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("PhoneNumber")
                    .HasColumnType("nvarchar(max)");

                b.HasKey("UserId");

                b.ToTable("Users");
            });

            modelBuilder.Entity("server.Model.WebSite", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<string>("Name")
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.ToTable("WebSites");
            });

            modelBuilder.Entity("CategoryUser", b =>
            {
                b.HasOne("server.Model.Category", null)
                    .WithMany()
                    .HasForeignKey("InterestsId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("server.Model.User", null)
                    .WithMany()
                    .HasForeignKey("UsersUserId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();
            });

            modelBuilder.Entity("server.Model.NewsItem", b =>
            {
                b.HasOne("server.Model.Category", "Category")
                    .WithMany()
                    .HasForeignKey("CategoryId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("server.Model.WebSite", "WebSite")
                    .WithMany("NewsItems")
                    .HasForeignKey("WebSiteId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Category");

                b.Navigation("WebSite");
            });

            modelBuilder.Entity("server.Model.Rss", b =>
            {
                b.HasOne("server.Model.Category", "Category")
                    .WithMany("Rss")
                    .HasForeignKey("CategoryId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("server.Model.WebSite", "WebSite")
                    .WithMany("RssLinks")
                    .HasForeignKey("WebSiteId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Category");

                b.Navigation("WebSite");
            });

            modelBuilder.Entity("server.Model.Category", b =>
            {
                b.Navigation("Rss");
            });

            modelBuilder.Entity("server.Model.WebSite", b =>
            {
                b.Navigation("NewsItems");

                b.Navigation("RssLinks");
            });
#pragma warning restore 612, 618
        }
    }
}
